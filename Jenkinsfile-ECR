@Library('my-shared-library') _

pipeline {
    agent any

    parameters{

        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'aws_account_id', description: " AWS Account ID", defaultValue: '407690876963')
        string(name: 'Region', description: "Region of ECR", defaultValue: 'us-west-2')
        string(name: 'ECR_REPO_NAME', description: "name of the ECR", defaultValue: 'krishgopal37')
        string(name: 'cluster', description: "name of the EKS Cluster", defaultValue: 'demo-cluster1')
    }
    environment{

        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_KEY_ID')
    }

    stages{

        stage("Git checkout"){

            when { expression {  params.action == 'create' } }

            steps{
                gitCheckout(
                    branch: "main",
                    url: "https://github.com/GopalakrishnanSubramani/zocket_cicd.git"
            )
            }
            }

        // stage('Docker Image Build : ECR'){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
                   
        //            dockerBuild("${params.aws_account_id}","${params.Region}","${params.ECR_REPO_NAME}")
        //        }
        //     }
        // }        

        // stage('Docker Image Scan: trivy '){
        //  when { expression {  params.action == 'create' } }
        //     steps{
        //        script{
                   
        //            dockerImageScan("${params.aws_account_id}","${params.Region}","${params.ECR_REPO_NAME}")
        //        }
        //     }
        // }

        // stage('Connect to EKS '){
        //     when { expression {  params.action == 'create' } }
        // steps{

        //     script{

        //         sh """
        //         aws configure set aws_access_key_id "$ACCESS_KEY"
        //         aws configure set aws_secret_access_key "$SECRET_KEY"
        //         aws configure set region "${params.Region}"
        //         """
        //     }
        // }
        // }
         stage('Create EKS Cluster : Terraform'){
            when { expression {  params.action == 'create' } }
            steps{
                script{

                    dir('eks_module') {
                      sh """
                          
                          terraform init 
                          terraform plan -var 'access_key=$ACCESS_KEY' -var 'secret_key=$SECRET_KEY' -var 'region=${params.Region}' --var-file=./config/terraform.tfvars
                          terraform apply -var 'access_key=$ACCESS_KEY' -var 'secret_key=$SECRET_KEY' -var 'region=${params.Region}' --var-file=./config/terraform.tfvars --auto-approve
                      """
                  }
                }
            }
        }
  
               
        }
    }